{"kind": "Listing", "data": {"after": "t3_196jbms", "dist": 12, "modhash": null, "geo_filter": null, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "# Weekly Thread: What's Everyone Working On This Week? \ud83d\udee0\ufe0f\n\nHello /r/Python! It's time to share what you've been working on! Whether it's a work-in-progress, a completed masterpiece, or just a rough idea, let us know what you're up to!\n\n## How it Works:\n\n1. **Show &amp; Tell**: Share your current projects, completed works, or future ideas.\n2. **Discuss**: Get feedback, find collaborators, or just chat about your project.\n3. **Inspire**: Your project might inspire someone else, just as you might get inspired here.\n\n## Guidelines:\n\n* Feel free to include as many details as you'd like. Code snippets, screenshots, and links are all welcome.\n* Whether it's your job, your hobby, or your passion project, all Python-related work is welcome here.\n\n## Example Shares:\n\n1. **Machine Learning Model**: Working on a ML model to predict stock prices. Just cracked a 90% accuracy rate!\n2. **Web Scraping**: Built a script to scrape and analyze news articles. It's helped me understand media bias better.\n3. **Automation**: Automated my home lighting with Python and Raspberry Pi. My life has never been easier!\n\nLet's build and grow together! Share your journey and learn from others. Happy coding! \ud83c\udf1f", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Sunday Daily Thread: What's everyone working on this week?", "link_flair_richtext": [{"a": ":pythonLogo:", "e": "emoji", "u": "https://emoji.redditmedia.com/8yxdpg6xxnr71_t5_2qh0y/pythonLogo"}, {"e": "text", "t": " Daily Thread"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "daily-thread", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_196218g", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.8, "author_flair_background_color": null, "subreddit_type": "public", "ups": 3, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": ":pythonLogo: Daily Thread", "can_mod_post": false, "score": 3, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1705190409.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": true, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;h1&gt;Weekly Thread: What&amp;#39;s Everyone Working On This Week? \ud83d\udee0\ufe0f&lt;/h1&gt;\n\n&lt;p&gt;Hello &lt;a href=\"/r/Python\"&gt;/r/Python&lt;/a&gt;! It&amp;#39;s time to share what you&amp;#39;ve been working on! Whether it&amp;#39;s a work-in-progress, a completed masterpiece, or just a rough idea, let us know what you&amp;#39;re up to!&lt;/p&gt;\n\n&lt;h2&gt;How it Works:&lt;/h2&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Show &amp;amp; Tell&lt;/strong&gt;: Share your current projects, completed works, or future ideas.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Discuss&lt;/strong&gt;: Get feedback, find collaborators, or just chat about your project.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Inspire&lt;/strong&gt;: Your project might inspire someone else, just as you might get inspired here.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h2&gt;Guidelines:&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Feel free to include as many details as you&amp;#39;d like. Code snippets, screenshots, and links are all welcome.&lt;/li&gt;\n&lt;li&gt;Whether it&amp;#39;s your job, your hobby, or your passion project, all Python-related work is welcome here.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Example Shares:&lt;/h2&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Machine Learning Model&lt;/strong&gt;: Working on a ML model to predict stock prices. Just cracked a 90% accuracy rate!&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Web Scraping&lt;/strong&gt;: Built a script to scrape and analyze news articles. It&amp;#39;s helped me understand media bias better.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Automation&lt;/strong&gt;: Automated my home lighting with Python and Raspberry Pi. My life has never been easier!&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Let&amp;#39;s build and grow together! Share your journey and learn from others. Happy coding! \ud83c\udf1f&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "6c024934-de3f-11ea-a05a-0ea86b2be9a1", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#00a6a5", "id": "196218g", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 10, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/196218g/sunday_daily_thread_whats_everyone_working_on/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/Python/comments/196218g/sunday_daily_thread_whats_everyone_working_on/", "subreddit_subscribers": 1195091, "created_utc": 1705190409.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "# Weekly Wednesday Thread: Advanced Questions \ud83d\udc0d\n\nDive deep into Python with our Advanced Questions thread! This space is reserved for questions about more advanced Python topics, frameworks, and best practices.\n\n## How it Works:\n\n1. **Ask Away**: Post your advanced Python questions here.\n2. **Expert Insights**: Get answers from experienced developers.\n3. **Resource Pool**: Share or discover tutorials, articles, and tips.\n\n## Guidelines:\n\n* This thread is for **advanced questions only**. Beginner questions are welcome in our [Daily Beginner Thread](#daily-beginner-thread-link) every Thursday.\n* Questions that are not advanced may be removed and redirected to the appropriate thread.\n\n## Recommended Resources:\n\n* If you don't receive a response, consider exploring r/LearnPython or join the [Python Discord Server](https://discord.gg/python) for quicker assistance.\n\n## Example Questions:\n\n1. **How can you implement a custom memory allocator in Python?**\n2. **What are the best practices for optimizing Cython code for heavy numerical computations?**\n3. **How do you set up a multi-threaded architecture using Python's Global Interpreter Lock (GIL)?**\n4. **Can you explain the intricacies of metaclasses and how they influence object-oriented design in Python?**\n5. **How would you go about implementing a distributed task queue using Celery and RabbitMQ?**\n6. **What are some advanced use-cases for Python's decorators?**\n7. **How can you achieve real-time data streaming in Python with WebSockets?**\n8. **What are the performance implications of using native Python data structures vs NumPy arrays for large-scale data?**\n9. **Best practices for securing a Flask (or similar) REST API with OAuth 2.0?**\n10. **What are the best practices for using Python in a microservices architecture? (..and more generally, should I even use microservices?)**\n\nLet's deepen our Python knowledge together. Happy coding! \ud83c\udf1f", "author_fullname": "t2_6l4z3", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Tuesday Daily Thread: Advanced questions", "link_flair_richtext": [{"a": ":pythonLogo:", "e": "emoji", "u": "https://emoji.redditmedia.com/8yxdpg6xxnr71_t5_2qh0y/pythonLogo"}, {"e": "text", "t": " Daily Thread"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "daily-thread", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_197o9co", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.75, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": ":pythonLogo: Daily Thread", "can_mod_post": false, "score": 2, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": true, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1705363209.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;h1&gt;Weekly Wednesday Thread: Advanced Questions \ud83d\udc0d&lt;/h1&gt;\n\n&lt;p&gt;Dive deep into Python with our Advanced Questions thread! This space is reserved for questions about more advanced Python topics, frameworks, and best practices.&lt;/p&gt;\n\n&lt;h2&gt;How it Works:&lt;/h2&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Ask Away&lt;/strong&gt;: Post your advanced Python questions here.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Expert Insights&lt;/strong&gt;: Get answers from experienced developers.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Resource Pool&lt;/strong&gt;: Share or discover tutorials, articles, and tips.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h2&gt;Guidelines:&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;This thread is for &lt;strong&gt;advanced questions only&lt;/strong&gt;. Beginner questions are welcome in our &lt;a href=\"#daily-beginner-thread-link\"&gt;Daily Beginner Thread&lt;/a&gt; every Thursday.&lt;/li&gt;\n&lt;li&gt;Questions that are not advanced may be removed and redirected to the appropriate thread.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Recommended Resources:&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;If you don&amp;#39;t receive a response, consider exploring &lt;a href=\"/r/LearnPython\"&gt;r/LearnPython&lt;/a&gt; or join the &lt;a href=\"https://discord.gg/python\"&gt;Python Discord Server&lt;/a&gt; for quicker assistance.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Example Questions:&lt;/h2&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;How can you implement a custom memory allocator in Python?&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;What are the best practices for optimizing Cython code for heavy numerical computations?&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;How do you set up a multi-threaded architecture using Python&amp;#39;s Global Interpreter Lock (GIL)?&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Can you explain the intricacies of metaclasses and how they influence object-oriented design in Python?&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;How would you go about implementing a distributed task queue using Celery and RabbitMQ?&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;What are some advanced use-cases for Python&amp;#39;s decorators?&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;How can you achieve real-time data streaming in Python with WebSockets?&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;What are the performance implications of using native Python data structures vs NumPy arrays for large-scale data?&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Best practices for securing a Flask (or similar) REST API with OAuth 2.0?&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;What are the best practices for using Python in a microservices architecture? (..and more generally, should I even use microservices?)&lt;/strong&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Let&amp;#39;s deepen our Python knowledge together. Happy coding! \ud83c\udf1f&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/IM0hooelH8W7dKT66ZTTI9zlcI3JEGy5AhOfU9_4tm4.jpg?auto=webp&amp;s=77877e508cacc3a5c51009b26cc51fd08031ca76", "width": 512, "height": 288}, "resolutions": [{"url": "https://external-preview.redd.it/IM0hooelH8W7dKT66ZTTI9zlcI3JEGy5AhOfU9_4tm4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c5fbdf8efb5e6f14fe03845466b74ba9ebab4413", "width": 108, "height": 60}, {"url": "https://external-preview.redd.it/IM0hooelH8W7dKT66ZTTI9zlcI3JEGy5AhOfU9_4tm4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d57848912389eb70e32659895710a7c322a93edf", "width": 216, "height": 121}, {"url": "https://external-preview.redd.it/IM0hooelH8W7dKT66ZTTI9zlcI3JEGy5AhOfU9_4tm4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=86d869d6c6e16a13c5cf960ab69d7d274b49ff16", "width": 320, "height": 180}], "variants": {}, "id": "aNa9dCzuqtUFBkZTt98jjYpcv1i_lqriq_lbtm_LcRo"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "6c024934-de3f-11ea-a05a-0ea86b2be9a1", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#00a6a5", "id": "197o9co", "is_robot_indexable": true, "report_reasons": null, "author": "AutoModerator", "discussion_type": null, "num_comments": 0, "send_replies": false, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/197o9co/tuesday_daily_thread_advanced_questions/", "parent_whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/Python/comments/197o9co/tuesday_daily_thread_advanced_questions/", "subreddit_subscribers": 1195091, "created_utc": 1705363209.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Do people still use PyBluez?\nIt's no longer being worked on, is there a package that's widely used instead or are people just using the stdlib's `socket` for communication?", "author_fullname": "t2_1lyyc67j", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Bluetooth in Python", "link_flair_richtext": [{"e": "text", "t": "Discussion"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "discussion", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_197muzz", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.89, "author_flair_background_color": null, "subreddit_type": "public", "ups": 46, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 46, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1705359631.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Do people still use PyBluez?\nIt&amp;#39;s no longer being worked on, is there a package that&amp;#39;s widely used instead or are people just using the stdlib&amp;#39;s &lt;code&gt;socket&lt;/code&gt; for communication?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "0df42996-1c5e-11ea-b1a0-0e44e1c5b731", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#f50057", "id": "197muzz", "is_robot_indexable": true, "report_reasons": null, "author": "ddmac__", "discussion_type": null, "num_comments": 11, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/197muzz/bluetooth_in_python/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/197muzz/bluetooth_in_python/", "subreddit_subscribers": 1195091, "created_utc": 1705359631.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "The large number of tools in the space, the emphasis on writing vague standards instead of rallying around the One True Tool, and the complicated venv-based ecosystem instead of a solution similar to node\\_modules. What has changed in the past year? Has anything improved, is everything the same, or are things worse than they were before?\n\n[https://chriswarrick.com/blog/2024/01/15/python-packaging-one-year-later/](https://chriswarrick.com/blog/2024/01/15/python-packaging-one-year-later/)\n\n&amp;#x200B;", "author_fullname": "t2_7ogw5", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "https://chriswarrick.com/blog/2024/01/15/python-packaging-one-year-later/", "link_flair_richtext": [{"e": "text", "t": "Resource"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "resource", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_197wrpx", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.66, "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 10, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1705388614.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The large number of tools in the space, the emphasis on writing vague standards instead of rallying around the One True Tool, and the complicated venv-based ecosystem instead of a solution similar to node_modules. What has changed in the past year? Has anything improved, is everything the same, or are things worse than they were before?&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://chriswarrick.com/blog/2024/01/15/python-packaging-one-year-later/\"&gt;https://chriswarrick.com/blog/2024/01/15/python-packaging-one-year-later/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "f9716fb2-4113-11ea-a3f1-0ef51f60f757", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ddbd37", "id": "197wrpx", "is_robot_indexable": true, "report_reasons": null, "author": "pmz", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/197wrpx/httpschriswarrickcomblog20240115pythonpackagingone/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/197wrpx/httpschriswarrickcomblog20240115pythonpackagingone/", "subreddit_subscribers": 1195091, "created_utc": 1705388614.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Python, especially when compared to lower-level languages like C or C++, seems not memory-efficient enough.\n\nHowever, there are still rooms for Python developers to do memory optimization.\n\n[This article](https://medium.com/techtofreedom/7-python-memory-optimization-tricks-to-enhance-your-codes-efficiency-5ef65bf415e7?sk=df088bcfb5315fe1fca54d22dc57a1bb) introduces 7 primitive but effective memory optimization tricks. Mastering them will enhance your Python programming skills significantly.", "author_fullname": "t2_v0iwszmf", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Memory Optimization Techniques for Python Developers", "link_flair_richtext": [{"e": "text", "t": "Tutorial"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "tutorial", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_19789aq", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.8, "author_flair_background_color": null, "subreddit_type": "public", "ups": 84, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 84, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1705323886.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Python, especially when compared to lower-level languages like C or C++, seems not memory-efficient enough.&lt;/p&gt;\n\n&lt;p&gt;However, there are still rooms for Python developers to do memory optimization.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://medium.com/techtofreedom/7-python-memory-optimization-tricks-to-enhance-your-codes-efficiency-5ef65bf415e7?sk=df088bcfb5315fe1fca54d22dc57a1bb\"&gt;This article&lt;/a&gt; introduces 7 primitive but effective memory optimization tricks. Mastering them will enhance your Python programming skills significantly.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/AO24Yd8BxETbJYv5y2vELGBM9Tt6Rq2nHqBIJ9aWTVM.jpg?auto=webp&amp;s=13b636e5ead2bfc089cf809e28eeac97a6e894b0", "width": 1200, "height": 798}, "resolutions": [{"url": "https://external-preview.redd.it/AO24Yd8BxETbJYv5y2vELGBM9Tt6Rq2nHqBIJ9aWTVM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=22c3422a761c463a365b3edd31bb8aebadfabf37", "width": 108, "height": 71}, {"url": "https://external-preview.redd.it/AO24Yd8BxETbJYv5y2vELGBM9Tt6Rq2nHqBIJ9aWTVM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c039d8ae7d8e24e933f22db536d018f62dcd1dfc", "width": 216, "height": 143}, {"url": "https://external-preview.redd.it/AO24Yd8BxETbJYv5y2vELGBM9Tt6Rq2nHqBIJ9aWTVM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e220784c66f36b412196d08c1c3ed05110715c1f", "width": 320, "height": 212}, {"url": "https://external-preview.redd.it/AO24Yd8BxETbJYv5y2vELGBM9Tt6Rq2nHqBIJ9aWTVM.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=674b2ff75906faa2b04aa3e5a2f3a19645a3c92e", "width": 640, "height": 425}, {"url": "https://external-preview.redd.it/AO24Yd8BxETbJYv5y2vELGBM9Tt6Rq2nHqBIJ9aWTVM.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=17a8ddf82d264f930724cc30bae4b86141910063", "width": 960, "height": 638}, {"url": "https://external-preview.redd.it/AO24Yd8BxETbJYv5y2vELGBM9Tt6Rq2nHqBIJ9aWTVM.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=0bc4b685319b465acd43054dd9f0fe0c106948c1", "width": 1080, "height": 718}], "variants": {}, "id": "pfiGPLDoWXzv8s2d3uV757euprZn3Opzbe4lWu0kk8A"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "19789aq", "is_robot_indexable": true, "report_reasons": null, "author": "wyhjsbyb", "discussion_type": null, "num_comments": 17, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/19789aq/memory_optimization_techniques_for_python/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/19789aq/memory_optimization_techniques_for_python/", "subreddit_subscribers": 1195091, "created_utc": 1705323886.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "I've recently released my first public OSS software! Targeted for kids learning mental math, but useful for anyone looking to improve their solution speeds.\n\nhttps://github.com/coffeephreak/MadMath", "author_fullname": "t2_90utklc26", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "MadMath: GUI mental math trainer", "link_flair_richtext": [{"e": "text", "t": "Intermediate Showcase"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "intermediate-showcase", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_1977xsi", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Intermediate Showcase", "can_mod_post": false, "score": 14, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1705322874.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve recently released my first public OSS software! Targeted for kids learning mental math, but useful for anyone looking to improve their solution speeds.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/coffeephreak/MadMath\"&gt;https://github.com/coffeephreak/MadMath&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ea0027", "id": "1977xsi", "is_robot_indexable": true, "report_reasons": null, "author": "koffeephreak", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/1977xsi/madmath_gui_mental_math_trainer/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/1977xsi/madmath_gui_mental_math_trainer/", "subreddit_subscribers": 1195091, "created_utc": 1705322874.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "I'm curious as to how folks with more Python experience than me will view the following simple example for building a C++ binary using my homebrew minimalist build sytem called \"tinybuild\". I'm intentionally not including any documentation in this snippet as I'm hoping to find out what parts are non-obvious to a new reader.\n\n[https://pastebin.com/qGpJqpNC](https://pastebin.com/qGpJqpNC)\n\nThe still-very-work-in-progress repo is at [https://github.com/aappleby/tinybuild](https://github.com/aappleby/tinybuild). Thanks in advance for the feedback.\n\n&amp;#x200B;", "author_fullname": "t2_5vhox", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "I'm putting together a minimalist build system in Python, and this is the \"Hello World\" example. Thoughts?", "link_flair_richtext": [{"e": "text", "t": "Intermediate Showcase"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "intermediate-showcase", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_1975xcu", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.71, "author_flair_background_color": null, "subreddit_type": "public", "ups": 22, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Intermediate Showcase", "can_mod_post": false, "score": 22, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1705315597.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m curious as to how folks with more Python experience than me will view the following simple example for building a C++ binary using my homebrew minimalist build sytem called &amp;quot;tinybuild&amp;quot;. I&amp;#39;m intentionally not including any documentation in this snippet as I&amp;#39;m hoping to find out what parts are non-obvious to a new reader.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://pastebin.com/qGpJqpNC\"&gt;https://pastebin.com/qGpJqpNC&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The still-very-work-in-progress repo is at &lt;a href=\"https://github.com/aappleby/tinybuild\"&gt;https://github.com/aappleby/tinybuild&lt;/a&gt;. Thanks in advance for the feedback.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/P8lS0kk6BFe2IEo6TxCZd1LVwksc34IkzGTVx_SCc8w.jpg?auto=webp&amp;s=b9f5c4e4867fbffb2c1ff45dd70aa338d1e3f40c", "width": 150, "height": 150}, "resolutions": [{"url": "https://external-preview.redd.it/P8lS0kk6BFe2IEo6TxCZd1LVwksc34IkzGTVx_SCc8w.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=3d74dbe4f1d67cc8b587db9aa01762f26e269bcf", "width": 108, "height": 108}], "variants": {}, "id": "OgFzGCIRw1ZxjMOSkfV1OiH-_nQiZl8rzSonmOAuhGs"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ea0027", "id": "1975xcu", "is_robot_indexable": true, "report_reasons": null, "author": "hellotanjent", "discussion_type": null, "num_comments": 23, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/1975xcu/im_putting_together_a_minimalist_build_system_in/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/1975xcu/im_putting_together_a_minimalist_build_system_in/", "subreddit_subscribers": 1195091, "created_utc": 1705315597.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "[https://youtu.be/9euPRnYhqs8](https://youtu.be/9euPRnYhqs8)\n\n&amp;#x200B;\n\nHey folks! Check out this amazing video on data types in python for a detailed insight in this topic.", "author_fullname": "t2_rwv375wru", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Data Types in Python | Python Basic Course", "link_flair_richtext": [{"e": "text", "t": "Tutorial"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "tutorial", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_197wtpr", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.4, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 0, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1705388819.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://youtu.be/9euPRnYhqs8\"&gt;https://youtu.be/9euPRnYhqs8&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Hey folks! Check out this amazing video on data types in python for a detailed insight in this topic.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/xFPiA82L6MRCNanAExiIBRpP3q5s-zt1KF2AiefY0h4.jpg?auto=webp&amp;s=b6c62fc8371e2113960129fd670a0eab582fcc53", "width": 480, "height": 360}, "resolutions": [{"url": "https://external-preview.redd.it/xFPiA82L6MRCNanAExiIBRpP3q5s-zt1KF2AiefY0h4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ab274361dfed35a74afcf7aa7ffa1785122bcd0f", "width": 108, "height": 81}, {"url": "https://external-preview.redd.it/xFPiA82L6MRCNanAExiIBRpP3q5s-zt1KF2AiefY0h4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=bccdf1879b82a1f548650786c632955ea0480117", "width": 216, "height": 162}, {"url": "https://external-preview.redd.it/xFPiA82L6MRCNanAExiIBRpP3q5s-zt1KF2AiefY0h4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=8be0d82ec1b38e6851decd4133a547f2a8c2f428", "width": 320, "height": 240}], "variants": {}, "id": "2jt0riUHjI92Zs7D1-ghwXnZB0i79JmVu0O-USdK1qM"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "197wtpr", "is_robot_indexable": true, "report_reasons": null, "author": "seela_kothari", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/197wtpr/data_types_in_python_python_basic_course/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/197wtpr/data_types_in_python_python_basic_course/", "subreddit_subscribers": 1195091, "created_utc": 1705388819.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "I've been having a problem downloading files slowly from SFTP using paramiko in Python towards a network share on a Windows host, and just wanted to share if anyone else experiences this problem searching.\n\nThe problem isn't the paramiko download speed itself, its the operation to copy the file straight onto the network share.  If you ever encounter this problem, the workaround is to copy your file to C:\\\\TEMP and then move it to your Windows file share.\n\nI went from downloading 2mb/sec to 100mb/sec and the file automatically got moved in a second.  The problem was not the speed between SFTP to my computer, and neither from my computer to the network share.  It's the sftp.get() operation itself that doesn't like it.  Modifying the code to copy to c:\\\\temp then move it to the share dramatically improved the speeds.\n\nI'm happy.", "author_fullname": "t2_37khl", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "SFTP Paramiko download to network share on Windows slow (solution)", "link_flair_richtext": [{"e": "text", "t": "Tutorial"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "tutorial", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_197j8hc", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.67, "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 2, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1705351147.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been having a problem downloading files slowly from SFTP using paramiko in Python towards a network share on a Windows host, and just wanted to share if anyone else experiences this problem searching.&lt;/p&gt;\n\n&lt;p&gt;The problem isn&amp;#39;t the paramiko download speed itself, its the operation to copy the file straight onto the network share.  If you ever encounter this problem, the workaround is to copy your file to C:\\TEMP and then move it to your Windows file share.&lt;/p&gt;\n\n&lt;p&gt;I went from downloading 2mb/sec to 100mb/sec and the file automatically got moved in a second.  The problem was not the speed between SFTP to my computer, and neither from my computer to the network share.  It&amp;#39;s the sftp.get() operation itself that doesn&amp;#39;t like it.  Modifying the code to copy to c:\\temp then move it to the share dramatically improved the speeds.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m happy.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "197j8hc", "is_robot_indexable": true, "report_reasons": null, "author": "mindracer", "discussion_type": null, "num_comments": 2, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/197j8hc/sftp_paramiko_download_to_network_share_on/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/197j8hc/sftp_paramiko_download_to_network_share_on/", "subreddit_subscribers": 1195091, "created_utc": 1705351147.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Hello developers.\n\nI finished a minimalist opensource blog based on django and bootstrap. If you are interested, you can check the content here:\n\nhttps://github.com/roderiano/django-blog", "author_fullname": "t2_45b57a3j", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Blog Template (Django + Bootstrap)", "link_flair_richtext": [{"e": "text", "t": "Resource"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "resource", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_197b388", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.64, "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Resource", "can_mod_post": false, "score": 4, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1705331804.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello developers.&lt;/p&gt;\n\n&lt;p&gt;I finished a minimalist opensource blog based on django and bootstrap. If you are interested, you can check the content here:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://github.com/roderiano/django-blog\"&gt;https://github.com/roderiano/django-blog&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/xqa7TZJpHpFi6sdgdJUzNqon5yt0mDBKAsnLo9oZWAQ.jpg?auto=webp&amp;s=871cedb205d50901e1bd162342746bc925c323aa", "width": 1200, "height": 600}, "resolutions": [{"url": "https://external-preview.redd.it/xqa7TZJpHpFi6sdgdJUzNqon5yt0mDBKAsnLo9oZWAQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=441afb4215febddfcd876e8b7e964342a016d27f", "width": 108, "height": 54}, {"url": "https://external-preview.redd.it/xqa7TZJpHpFi6sdgdJUzNqon5yt0mDBKAsnLo9oZWAQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=06c61882043bfaf7b8296615359ab6b839a6b0aa", "width": 216, "height": 108}, {"url": "https://external-preview.redd.it/xqa7TZJpHpFi6sdgdJUzNqon5yt0mDBKAsnLo9oZWAQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=32ac2b7ca9c1072cc2d8f9fba6d1252d9f53f23e", "width": 320, "height": 160}, {"url": "https://external-preview.redd.it/xqa7TZJpHpFi6sdgdJUzNqon5yt0mDBKAsnLo9oZWAQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=8786c87ad42faf04335713348afadcb97c7cb5b8", "width": 640, "height": 320}, {"url": "https://external-preview.redd.it/xqa7TZJpHpFi6sdgdJUzNqon5yt0mDBKAsnLo9oZWAQ.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=9ff478ea5bda7f5d85febee22731ffb11bc2c180", "width": 960, "height": 480}, {"url": "https://external-preview.redd.it/xqa7TZJpHpFi6sdgdJUzNqon5yt0mDBKAsnLo9oZWAQ.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=bcda9a3a40fdf9c7bcdffd38b09b45cfb57f9169", "width": 1080, "height": 540}], "variants": {}, "id": "Tft7KoqjJUZLtpQLGrkfa0HyUu3M9Up5YABqImyCun8"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "f9716fb2-4113-11ea-a3f1-0ef51f60f757", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#ddbd37", "id": "197b388", "is_robot_indexable": true, "report_reasons": null, "author": "roderiano", "discussion_type": null, "num_comments": 7, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/197b388/blog_template_django_bootstrap/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/197b388/blog_template_django_bootstrap/", "subreddit_subscribers": 1195091, "created_utc": 1705331804.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "Coming to Python from a JavaScript background, I needed to figure like virtual environments, Python 2 vs Python 3 versions and other things like this. I wrote an article on this topic if this is helpful to anyone: [https://snyk.io/blog/mastering-python-virtual-environments/](https://snyk.io/blog/mastering-python-virtual-environments/)", "author_fullname": "t2_atc69", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Getting it right with Python virtual environments", "link_flair_richtext": [{"e": "text", "t": "Tutorial"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "tutorial", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_197wjnn", "quarantine": false, "link_flair_text_color": "dark", "upvote_ratio": 0.31, "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Tutorial", "can_mod_post": false, "score": 0, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "post_hint": "self", "content_categories": null, "is_self": true, "mod_note": null, "created": 1705387807.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Coming to Python from a JavaScript background, I needed to figure like virtual environments, Python 2 vs Python 3 versions and other things like this. I wrote an article on this topic if this is helpful to anyone: &lt;a href=\"https://snyk.io/blog/mastering-python-virtual-environments/\"&gt;https://snyk.io/blog/mastering-python-virtual-environments/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "preview": {"images": [{"source": {"url": "https://external-preview.redd.it/0b2qpT_ji22b4DUtlRTDTffBOheQz52N4GP1MVZEAk4.jpg?auto=webp&amp;s=a9e851faf93f31b8bd456befc1dfc0a4422def4e", "width": 1200, "height": 628}, "resolutions": [{"url": "https://external-preview.redd.it/0b2qpT_ji22b4DUtlRTDTffBOheQz52N4GP1MVZEAk4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=bf45c819b02ae5327d6098db80b45443756c6d79", "width": 108, "height": 56}, {"url": "https://external-preview.redd.it/0b2qpT_ji22b4DUtlRTDTffBOheQz52N4GP1MVZEAk4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b94f77d4db91f3189c5f35918d9ce527d67e6ea8", "width": 216, "height": 113}, {"url": "https://external-preview.redd.it/0b2qpT_ji22b4DUtlRTDTffBOheQz52N4GP1MVZEAk4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1a2f8fe3ab05cc254e902ea10c977f351581cf4d", "width": 320, "height": 167}, {"url": "https://external-preview.redd.it/0b2qpT_ji22b4DUtlRTDTffBOheQz52N4GP1MVZEAk4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e001df5c5f2771fa44ad98180bfa9f17ddc18d48", "width": 640, "height": 334}, {"url": "https://external-preview.redd.it/0b2qpT_ji22b4DUtlRTDTffBOheQz52N4GP1MVZEAk4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=bbae5ea5f5b48d857678b4d44f7a699f90bd099c", "width": 960, "height": 502}, {"url": "https://external-preview.redd.it/0b2qpT_ji22b4DUtlRTDTffBOheQz52N4GP1MVZEAk4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=7030e30417a001695f0379e8e886a2323e98a4cc", "width": 1080, "height": 565}], "variants": {}, "id": "Fs2NOeSsxSL6OzOTFi4xf5_PTpgEw1BVWe2Nruj68-I"}], "enabled": false}, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#dadada", "id": "197wjnn", "is_robot_indexable": true, "report_reasons": null, "author": "lirantal", "discussion_type": null, "num_comments": 1, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/197wjnn/getting_it_right_with_python_virtual_environments/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/197wjnn/getting_it_right_with_python_virtual_environments/", "subreddit_subscribers": 1195091, "created_utc": 1705387807.0, "num_crossposts": 0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "Python", "selftext": "I've been trying Polars and love them more than Pandas. In addition to performance, I find the API better designed (fewer ways to do the same thing) which, I think, allows memorizing the syntax faster, I would recommend Polars instead of Pandas to a new person.\n\nAre there any modern alternatives for data visualization, algorithms, etc. that you are considering as an upgrade to your stack?", "author_fullname": "t2_n7qqe288b", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Modern alternatives to Data Science Libraries like Polars with Pandas?", "link_flair_richtext": [{"e": "text", "t": "Discussion"}], "subreddit_name_prefixed": "r/Python", "hidden": false, "pwls": 6, "link_flair_css_class": "discussion", "downs": 0, "thumbnail_height": null, "top_awarded_type": null, "hide_score": false, "name": "t3_196jbms", "quarantine": false, "link_flair_text_color": "light", "upvote_ratio": 0.94, "author_flair_background_color": null, "subreddit_type": "public", "ups": 197, "total_awards_received": 0, "media_embed": {}, "thumbnail_width": null, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": "Discussion", "can_mod_post": false, "score": 197, "approved_by": null, "is_created_from_ads_ui": false, "author_premium": false, "thumbnail": "self", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1705248727.0, "link_flair_type": "richtext", "wls": 6, "removed_by_category": null, "banned_by": null, "author_flair_type": "text", "domain": "self.Python", "allow_live_comments": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been trying Polars and love them more than Pandas. In addition to performance, I find the API better designed (fewer ways to do the same thing) which, I think, allows memorizing the syntax faster, I would recommend Polars instead of Pandas to a new person.&lt;/p&gt;\n\n&lt;p&gt;Are there any modern alternatives for data visualization, algorithms, etc. that you are considering as an upgrade to your stack?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": true, "pinned": false, "over_18": false, "all_awardings": [], "awarders": [], "media_only": false, "link_flair_template_id": "0df42996-1c5e-11ea-b1a0-0e44e1c5b731", "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "treatment_tags": [], "visited": false, "removed_by": null, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qh0y", "author_is_blocked": false, "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "#f50057", "id": "196jbms", "is_robot_indexable": true, "report_reasons": null, "author": "Ok-Tutor-4321", "discussion_type": null, "num_comments": 48, "send_replies": true, "whitelist_status": "all_ads", "contest_mode": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/Python/comments/196jbms/modern_alternatives_to_data_science_libraries/", "parent_whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/Python/comments/196jbms/modern_alternatives_to_data_science_libraries/", "subreddit_subscribers": 1195091, "created_utc": 1705248727.0, "num_crossposts": 0, "media": null, "is_video": false}}], "before": null}}